# IMPORTANT: after HEAD is updated, the "LWJGL" tag must be recreated!

# This workflow builds the standalone harfbuzz library.
# However, this git tag ("LWJGL") is also used by LWJGL-CI/freetype.
# Any changes to non-workflow files should be tested with both workflows.

name: LWJGL Build

on:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_PARAMS: --cache-control "public,must-revalidate,proxy-revalidate,max-age=0"
  HARFBUZZ_PARAMS: --wrap-mode=default -Dfreetype=disabled -Dtests=disabled -Dbenchmark=disabled -Ddocs=disabled -Dexperimental_api=true --buildtype=release -Db_lto=true -Db_ndebug=true

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: centos:7
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64]
        include:
          - ARCH: x64
    defaults:
      run:
        shell: bash
    steps:
      - name: Upgrade git
        run: |
          sed -i \
            -e 's/^mirrorlist/#mirrorlist/' \
            -e 's/^#baseurl/baseurl/' \
            -e 's/mirror\.centos\.org/vault.centos.org/' \
            /etc/yum.repos.d/*.repo
          yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum -y install git
      - name: Clone repository
        run: git clone --depth 3 https://github.com/${{ github.repository }}.git .
      - name: Configure yum
        run: |
          yum -y install epel-release
          yum -y update
      - name: Install build dependencies
        run: |
          yum -y install centos-release-scl
          sed -i \
            -e 's/^mirrorlist/#mirrorlist/' \
            -e 's/^#baseurl/baseurl/' \
            -e 's/^# baseurl/baseurl/' \
            -e 's/mirror\.centos\.org/vault.centos.org/' \
            /etc/yum.repos.d/CentOS-SCLo-scl*.repo
          yum -y install devtoolset-11-gcc-c++
          yum -y install python3 awscli
      - name: Install HarfBuzz dependencies
        run: |
          yum -y install ninja-build
          pip3 install meson
      - name: Configure build
        run: |
          source scl_source enable devtoolset-11 || true
          meson setup build $HARFBUZZ_PARAMS
      - name: Build
        run: |
          source scl_source enable devtoolset-11 || true
          meson compile --verbose -C build
          strip build/src/libharfbuzz.so
      - name: Upload artifact
        run: aws s3 cp build/src/libharfbuzz.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
      - name: Upload git revision
        run: |
          git config --global --add safe.directory $PWD
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libharfbuzz.so.git
          aws s3 cp libharfbuzz.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}

  linux-cross:
    name: Linux Cross
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ARCH: [arm32, arm64, ppc64le, riscv64]
        include:
          # -----
          - ARCH: arm32
            CROSS_ARCH: armhf
            TRIPLET: arm-linux-gnueabihf
          # -----
          - ARCH: arm64
            CROSS_ARCH: arm64
            TRIPLET: aarch64-linux-gnu
          # -----
          - ARCH: ppc64le
            CROSS_ARCH: ppc64el
            TRIPLET: powerpc64le-linux-gnu
          # -----
          - ARCH: riscv64
            CROSS_ARCH: riscv64
            TRIPLET: riscv64-linux-gnu
    env:
      LWJGL_ARCH: ${{matrix.ARCH}}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3
      - name: Install dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -yq update
          DEBIAN_FRONTEND=noninteractive sudo apt-get -yq install awscli ninja-build python3-pip gcc-${{matrix.TRIPLET}} g++-${{matrix.TRIPLET}} libc6-dev-${{matrix.CROSS_ARCH}}-cross
      - name: Install meson
        run: pip3 install meson
      - name: Configure build
        run: meson setup build $HARFBUZZ_PARAMS --cross-file lwjgl_linux_${{matrix.ARCH}}.cross
      - name: Build
        run: |
          meson compile --verbose -C build
          ${{matrix.TRIPLET}}-strip build/src/libharfbuzz.so
      - name: Upload artifact
        run: aws s3 cp build/src/libharfbuzz.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
      - name: Upload git revision
        run: |
          git config --global --add safe.directory $(pwd)
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libharfbuzz.so.git
          aws s3 cp libharfbuzz.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}

  freebsd-cross:
    name: FreeBSD Cross
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3
      - name: Build
        uses: cross-platform-actions/action@v0.29.0
        with:
          operating_system: freebsd
          architecture: x86-64
          version: '13.5'
          memory: 4G
          shell: bash
          environment_variables: HARFBUZZ_PARAMS
          run: |
            sudo pkg install -y git python3 ninja
            python3 -m ensurepip --upgrade
            export PATH=$PATH:/home/runner/.local/bin
            pip3 install meson
            meson setup build $HARFBUZZ_PARAMS
            meson compile --verbose -C build
            strip build/src/libharfbuzz.so
      - name: Upload artifact
        run: aws s3 cp build/src/libharfbuzz.so s3://lwjgl-build/nightly/freebsd/x64/ ${{env.S3_PARAMS}}
      - name: Upload git revision
        run: |
          git config --global --add safe.directory $PWD
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libharfbuzz.so.git
          aws s3 cp libharfbuzz.so.git s3://lwjgl-build/nightly/freebsd/x64/ ${{env.S3_PARAMS}}

  macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64, arm64]
        include:
          - ARCH: x64
            MACOS: 10.11
            MESON_PARAMS: --cross-file lwjgl_macos_x64.cross
          - ARCH: arm64
            MACOS: 11.0
            MESON_PARAMS: --cross-file lwjgl_macos_arm64.cross
            env:
              MACOSX_DEPLOYMENT_TARGET: 11.0
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - name: Install dependencies
        run: brew install meson
      - name: Configure build
        run: MACOSX_DEPLOYMENT_TARGET=${{matrix.MACOS}} meson setup build $HARFBUZZ_PARAMS -Dcoretext=enabled ${{matrix.MESON_PARAMS}}
      - name: Build
        run: |
          MACOSX_DEPLOYMENT_TARGET=${{matrix.MACOS}} meson compile --verbose -C build
          strip -u -r build/src/libharfbuzz.dylib
      - name: Upload artifact
        run: aws s3 cp build/src/libharfbuzz.dylib s3://lwjgl-build/nightly/macosx/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
      - name: Upload git revision
        run: |
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libharfbuzz.dylib.git
          aws s3 cp libharfbuzz.dylib.git s3://lwjgl-build/nightly/macosx/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x86, x64, arm64]
        include:
          - ARCH: x86
            MSVC_ARCH: amd64_x86
            PLATFORM: Win32
            MESON_PARAMS:
          - ARCH: x64
            MSVC_ARCH: amd64
            PLATFORM: x64
            MESON_PARAMS:
          - ARCH: arm64
            MSVC_ARCH: amd64_arm64
            PLATFORM: ARM64
            MESON_PARAMS: --cross-file lwjgl_windows_arm64.cross
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.MSVC_ARCH}}
      # Strawberry: see LWJGL-CI/freetype's workflow for details.
      - name: Install dependencies
        run: |
          pip3 install -r .ci/requirements.txt --require-hashes
          rmdir C:\Strawberry /s /q
      - name: Configure build
        run: meson setup build %HARFBUZZ_PARAMS% -Dgdi=enabled -Ddirectwrite=enabled -Db_vscrt=mt ${{matrix.MESON_PARAMS}}
      - name: Build
        run: meson compile --verbose -C build
      - name: Upload artifact
        run: aws s3 cp build\src\harfbuzz.dll s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
      - name: Upload git revision
        run: |
          git log --first-parent --pretty=format:%%H HEAD~2..HEAD~1 > harfbuzz.dll.git
          aws s3 cp harfbuzz.dll.git s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/ ${{env.S3_PARAMS}}
